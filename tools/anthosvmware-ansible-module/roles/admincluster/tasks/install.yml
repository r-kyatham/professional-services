# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: "[ac] Block - Preflight checks, deploy cluster and delete GCP SA JSON key files"
  block:

    - name: "[ac] Setup cluster config"
      include_tasks: setup-config.yml

    - name: "[ac] Check existence of datastore folder for admin cluster"
      ansible.builtin.command: # noqa 305 301 no-changed-when
        argv:
          - govc
          - datastore.ls
          - -json
      register: r_ac_folder

    - name: "[ac] Create datastore folder for admin cluster"
      ansible.builtin.command: # noqa 305 301 no-changed-when
        argv:
          - govc
          - datastore.mkdir
          - "{{ ac_name }}"
      when: not r_ac_folder.stdout is search(ac_name)

    - name: "[ac] Check existence of kubevols folder"
      ansible.builtin.command: # noqa 305 301 no-changed-when
        argv:
          - govc
          - datastore.ls
          - -json
      register: r_kubevols_folder

    - name: "[ac] Create datastore folder kubevols"
      ansible.builtin.command: # noqa 305 301 no-changed-when
        argv:
          - govc
          - datastore.mkdir
          - kubevols
      when: not r_kubevols_folder.stdout is search("kubevols")

    - name: "[ac] prepare check status file"
      ansible.builtin.stat:
        path: "{{ yamldestpath }}/{{ ac_name }}/{{ ac_name }}-prepare"
      register: prepare_file
      tags: prepare

    - name: "[ac] Upload OVAs to vSphere and optionally upload system images to private registry"
      async: 7200
      poll: 5
      ansible.builtin.command: # noqa 305 301 no-changed-when
        chdir: "{{ yamldestpath }}/{{ ac_name }}"
        argv: "{{ _argv }}"
      vars:
        _req_args:
          - gkectl
          - prepare
          - --config
          - "{{ ac_name }}-cluster.yaml"
        _skips: "{{ ac_skipvalidations if ac_skipvalidations | type_debug == 'list' else (ac_skipvalidations.split(' ')) }}"
        _argv: "{{ _req_args + _skips }}"
      register: prepare_result
      when: not prepare_file.stat.exists
      tags: prepare

    - name: "[ac] Prepare results"
      ansible.builtin.file:
        path: "{{ yamldestpath }}/{{ ac_name }}/{{ ac_name }}-prepare"
        state: touch
        mode: 0600  
      when: prepare_result.rc | default('') == 0
      tags: prepare

    - name: "[ac] preflight check status file"
      ansible.builtin.stat:
        path: "{{ yamldestpath }}/{{ ac_name }}/{{ ac_name }}-preflight"
      register: preflight_file
      tags: preflight

    - name: "[ac] Preflight check"
      async: 2700
      poll: 5
      ansible.builtin.command: # noqa 305 301 no-changed-when
        chdir: "{{ yamldestpath }}/{{ ac_name }}"
        argv: "{{ _argv }}"
      vars:
        _req_args:
          - gkectl
          - check-config
          - --config
          - "{{ ac_name }}-cluster.yaml"
        _skips: "{{ ac_skipvalidations if ac_skipvalidations | type_debug == 'list' else (ac_skipvalidations.split(' ')) }}"
        _argv: "{{ _req_args + _skips }}"
      register: preflight_result
      when: not preflight_file.stat.exists
      tags: preflight

    - name: "[ac] Preflight results"
      ansible.builtin.file:
        path: "{{ yamldestpath }}/{{ ac_name }}/{{ ac_name }}-preflight"
        state: touch
        mode: 0600
      when: preflight_result.rc | default('') == 0
      tags: preflight

    - name: "[ac] Create cluster"
      async: 3600
      poll: 5
      ansible.builtin.command: # noqa 305 301 no-changed-when
        chdir: "{{ yamldestpath }}"
        argv: "{{ _argv }}"
        creates: "~/kubeconfig"
      vars:
        _req_args:
          - gkectl
          - create
          - admin
          - --config
          - "{{ ac_name }}/{{ ac_name }}-cluster.yaml"
          - --alsologtostderr
          - -v
          - "{{ ac_verbosity }}"
        _skips: "{{ ac_skipvalidations if ac_skipvalidations | type_debug == 'list' else (ac_skipvalidations.split(' ')) }}"
        _argv: "{{ _req_args + _skips }}"

  environment:
    PATH: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin"
    http_proxy: "{{ glb_proxyurl }}"
    https_proxy: "{{ glb_proxyurl }}"
    no_proxy: "{{ glb_noproxy }}"
    GOVC_URL: "https://{{ ac_vc_fqdn }}/sdk"
    GOVC_USERNAME: "{{ ac_vc_username }}"
    GOVC_PASSWORD: "{{ ac_vc_password }}"
    GOVC_DATASTORE: "{{ ac_vc_datastore }}"
    GOVC_DATACENTER: "{{ ac_vc_datacenter }}"
    GOVC_RESOURCE_POOL: "{{ ac_vc_respool }}"
    GOVC_INSECURE: "true"

  always:
    - name: "[ac] Include role to delete sensitive files"
      ansible.builtin.include_role:
        name: cleanup
