# Copyright 2021 Google LLC
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Performing Resources Stability Check For Admin/Hybrid Cluster
  shell:
    cmd: |
      export GOOGLE_APPLICATION_CREDENTIALS="{{ gcp_sa_key_dir }}/{{ gcloud_preq_sa_name }}.json"
      bmctl check cluster -c "{{ cluster_name }}"
    chdir: "{{ login_user_home }}"
  when: cluster_type != "user"

- name: Performing Resources Stability Check For User Cluster
  shell:
    cmd: |
      export GOOGLE_APPLICATION_CREDENTIALS="{{ gcp_sa_key_dir }}/{{ gcloud_preq_sa_name }}.json"
      bmctl check cluster -c "{{ cluster_name }}" --admin-kubeconfig "{{ admin_kubeconfig_path }}"
    chdir: "{{ login_user_home }}"
  when: cluster_type == "user"

- name: Performing Cluster Stability Check
  shell:
    cmd: kubectl get cluster "{{ cluster_name }}" --kubeconfig "{{ admin_kubeconfig_path }}" -n "cluster-{{ cluster_name }}" -o json | jq '.status.conditions[] | select(.type=="Reconciling") | .status'
    chdir: "{{ login_user_home }}"
  register: cluster_reconciliation_status

- name: Print Message In Case Cluster is Unstable To Take Backup
  fail:
     msg: "Anthos cluster is unstable to initiate the backup process."
  when: "'True' in cluster_reconciliation_status.stdout"
     
- name: Initiating Backup Process For Anthos Cluster
  shell:
    cmd: |
      export GOOGLE_APPLICATION_CREDENTIALS="{{ gcp_sa_key_dir }}/{{ gcloud_preq_sa_name }}.json"
      bmctl backup cluster -c "{{ cluster_name }}" --kubeconfig "{{ admin_kubeconfig_path }}" --yes
    chdir: "{{ login_user_home }}"
  when: "'False' in cluster_reconciliation_status.stdout"
